[DEFAULT]
zarr_folder = /path/to/zarr_folder
output_folder = /path/to/output_folder
max_af_ceiling = 0.01
impact = HIGH,MODERATE
loftool_score_ceiling = 0.5
filter_type = exon
flatten = False
file_name = data_output.csv
log_file_prefix = log_data_transformation

#[DROP_COLUMNS]
# columns = af,afr_af,eas_af,amr_af,appris,biotype,canonical,ccds,symbol_source,trembl,tsl,pubmed,sas_af,max_af_pops,eur_af,distance,end position,ensp,event,flags,hgnc_id,hgvs_offset,motif_name,motif_pos,motif_score_change
#columns = af,afr_af,eas_af,amr_af,appris,biotype,canonical,ccds,symbol_source,trembl,tsl,pubmed,sas_af,max_af_pops,eur_af,distance,ensp,event,flags,hgnc_id,hgvs_offset,motif_name,motif_pos,motif_score_change

[SLURM]
slurm_account = sooeunc0

[SAMPLE_INFO]
family = false



[RENAME_MAP]
# Specify column renaming as old_name = new_name, one per line
# Example:
# oldname1 = newname1
# oldname2 = newname2

[ZARR_SUBSETS]
# Define predefined subsets with filtering criteria
# Format: subset_name = {"columns": ["col1", "col2"], "filters": {"col": "condition"}}

# High impact variants subset
high_impact = {"columns": ["family", "filename", "chrom", "pos", "ref", "alt", "consequence", "impact", "gene", "hgvsc", "hgvsp"], "filters": {"impact": ["HIGH"], "max_af": "<0.01"}}

# Clinical significance subset
clinical = {"columns": ["family", "filename", "chrom", "pos", "ref", "alt", "consequence", "clin_sig", "gene", "hgvsc"], "filters": {"clin_sig": "!='.'", "consequence": "contains:missense_variant|stop_gained|frameshift"}}

# Rare variants subset
rare_variants = {"columns": ["family", "filename", "chrom", "pos", "ref", "alt", "consequence", "max_af", "gene"], "filters": {"max_af": "<0.001", "consequence": "!contains:synonymous"}}

# Gene-specific subset example
brca_genes = {"columns": ["family", "filename", "chrom", "pos", "ref", "alt", "consequence", "gene", "hgvsc", "hgvsp"], "filters": {"gene": "in:BRCA1,BRCA2,TP53,PALB2"}}

[ZARR_SUBSET_DEFAULTS]
# Default settings for subset creation
compression = blosc
chunk_size = 1000
create_index = True
save_metadata = True

[COLUMN_MANAGEMENT]
# All possible column names that may appear in genomic datasets
possible_columns = SAMPLE,CHROM,POS,REF,ALT,QUAL,FILTER,ID,INFO['SVLEN'],INFO['END'],INFO['SVTYPE'],INFO['EVENT'],INFO['MATEID'],INFO['IMPRECISE'],INFO['CIPOS'],INFO['CIEND'],INFO['HETEROZYGOSITY'],INFO['SOMATIC_EFFECTIVE_MUTATION_RATE'],INFO['ALT_INDEL_OPERATIONS'],INFO['HINTS'],INFO['known_E_gnomAD'],INFO['known_CLIN_protective'],INFO['known_CLIN_drug_response'],INFO['known_AA'],INFO['known_CLIN_association'],INFO['known_CLIN_histocompatibility'],INFO['known_dbSNP_156'],INFO['known_MAC'],INFO['known_MAF'],INFO['known_E_Hapmap'],INFO['known_E_Freq'],INFO['known_E_Cited'],INFO['known_CLIN_likely_benign'],INFO['known_E_TOPMed'],INFO['known_CLIN_risk_factor'],INFO['known_CLIN_benign'],INFO['known_CLIN_other'],INFO['known_E_ESP'],INFO['known_MA'],INFO['known_CLIN_likely_pathogenic'],INFO['known_TSA'],INFO['known_HGMD-PUBLIC_20204'],INFO['known_CLIN_uncertain_significance'],INFO['known_ClinVar_202306'],INFO['known_E_1000G'],INFO['known_COSMIC_98'],INFO['known_E_Multiple_observations'],INFO['known_CLIN_pathogenic'],INFO['known_CLIN_confers_sensitivity'],INFO['known_E_Phenotype_or_Disease'],INFO['known_E_ExAC'],INFO['known_CLIN_not_provided'],INFO['PROB_VARIANTS_UPDATE'],INFO['PROB_ARTIFACT'],INFO['PROB_ABSENT'],FORMAT['DP'],FORMAT['AF'],FORMAT['SAOBS'],FORMAT['SROBS'],FORMAT['OBS'],FORMAT['OOBS'],FORMAT['SB'],FORMAT['ROB'],FORMAT['RPB'],FORMAT['SCB'],FORMAT['HE'],FORMAT['ALB'],FORMAT['AFD'],FORMAT['GT'],ANN['Allele'],ANN['HGVS.c'],ANN['Consequence'],ANN['IMPACT'],ANN['SYMBOL'],ANN['Gene'],ANN['Feature_type'],ANN['Feature'],ANN['BIOTYPE'],ANN['EXON'],ANN['INTRON'],ANN['HGVSc'],ANN['HGVSp'],ANN['cDNA_position'],ANN['CDS_position'],ANN['Protein_position'],ANN['Amino_acids'],ANN['Codons'],ANN['Existing_variation'],ANN['DISTANCE'],ANN['STRAND'],ANN['FLAGS'],ANN['VARIANT_CLASS'],ANN['SYMBOL_SOURCE'],ANN['HGNC_ID'],ANN['CANONICAL'],ANN['MANE_SELECT'],ANN['MANE_PLUS_CLINICAL'],ANN['TSL'],ANN['APPRIS'],ANN['CCDS'],ANN['ENSP'],ANN['SWISSPROT'],ANN['TREMBL'],ANN['UNIPARC'],ANN['UNIPROT_ISOFORM'],ANN['GENE_PHENO'],ANN['SIFT'],ANN['PolyPhen'],ANN['DOMAINS'],ANN['miRNA'],ANN['HGVS_OFFSET'],ANN['HGVSg'],ANN['AF'],ANN['AFR_AF'],ANN['AMR_AF'],ANN['EAS_AF'],ANN['EUR_AF'],ANN['SAS_AF'],ANN['gnomADe_AMR_AF'],ANN['gnomADe_ASJ_AF'],ANN['gnomADe_EAS_AF'],ANN['gnomADe_FIN_AF'],ANN['gnomADe_NFE_AF'],ANN['gnomADe_OTH_AF'],ANN['gnomADe_SAS_AF'],ANN['gnomADg_AF'],ANN['gnomADg_AFR_AF'],ANN['gnomADg_AMI_AF'],ANN['gnomADg_AMR_AF'],ANN['gnomADg_ASJ_AF'],ANN['gnomADg_EAS_AF'],ANN['gnomADg_FIN_AF'],ANN['gnomADg_MID_AF'],ANN['gnomADg_NFE_AF'],ANN['gnomADg_OTH_AF'],ANN['gnomADg_SAS_AF'],ANN['MAX_AF'],ANN['MAX_AF_POPS'],ANN['CLIN_SIG'],ANN['SOMATIC'],ANN['PHENO'],ANN['PUBMED'],ANN['MOTIF_NAME'],ANN['MOTIF_POS'],ANN['HIGH_INF_POS'],ANN['MOTIF_SCORE_CHANGE'],ANN['TRANSCRIPTION_FACTORS'],ANN['LoFtool'],ANN['REVEL']

# Columns to drop
drop_columns = ANN['gnomADe_AF'],ANN['gnomADe_AFR_AF'],ANN['gnomADg_AMI_AF'],FORMAT['OBS'],ANN['AFR_AF'],ANN['AMR_AF'],ANN['EAS_AF'],ANN['EUR_AF'],ANN['SAS_AF'],ANN['gnomADe_AF'],ANN['gnomADe_AFR_AF'],ANN['gnomADe_AMR_AF'],ANN['gnomADe_ASJ_AF'],ANN['gnomADe_EAS_AF'],ANN['gnomADe_FIN_AF'],ANN['gnomADe_NFE_AF'],ANN['gnomADe_OTH_AF'],ANN['gnomADe_SAS_AF'],ANN['gnomADg_AF'],ANN['gnomADg_AFR_AF'],ANN['gnomADg_AMR_AF'],ANN['gnomADg_ASJ_AF'],ANN['gnomADg_EAS_AF'],ANN['gnomADg_FIN_AF'],ANN['gnomADg_MID_AF'],ANN['gnomADg_NFE_AF'],ANN['gnomADg_OTH_AF'],ANN['gnomADg_SAS_AF'],ANN['MAX_AF_POPS'],ANN['DOMAINS'],INFO['known_E_gnomAD'],INFO['EVENT'],INFO['known_MAF'],INFO['known_E_1000G'],INFO['HINTS'],INFO['known_HGMD-PUBLIC_20204'],INFO['HETEROZYGOSITY'],


[FILTERS]
# Define filtering criteria for Zarr files
# Format: column_name = operator:value
# Operators: <, <=, >, >=, ==, !=, in, not_in, contains, not_contains
# Filter variants with MAX_AF above 0.1 (keep only rare variants)
ANN['MAX_AF'] = <=:0.2